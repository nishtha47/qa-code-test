services:
  # Main automation testing service
  parabank-automation:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: parabank-automation
    environment:
      - HEADLESS=true
      - NODE_ENV=production
      - PARABANK_URL=https://parabank.parasoft.com/parabank
      - PARABANK_API_URL=https://parabank.parasoft.com/parabank/services/bank
      - DISPLAY=:99
      - SCREENSHOT_ON_STEP=false
    volumes:
      - ./reports:/app/reports
      - ./src/features/support/reports:/app/src/features/support/reports
      - ./allure-results:/app/allure-results
    networks:
      - parabank-automation-network
    command: npm run test:ci
    restart: unless-stopped

  # Service for API-only testing
  parabank-api-tests:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: parabank-api-tests
    environment:
      - NODE_ENV=production
      - PARABANK_API_URL=https://parabank.parasoft.com/parabank/services/bank
    volumes:
      - ./reports:/app/reports
    networks:
      - parabank-automation-network
    command: npm run test:ci:api
    profiles:
      - api-only

  # Service for UI-only testing
  parabank-ui-tests:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: parabank-ui-tests
    environment:
      - HEADLESS=true
      - NODE_ENV=production
      - PARABANK_URL=https://parabank.parasoft.com/parabank
      - DISPLAY=:99
      - SCREENSHOT_ON_STEP=true
    volumes:
      - ./reports:/app/reports
      - ./src/features/support/screenshots:/app/src/features/support/screenshots
      - ./src/features/support/videos:/app/src/features/support/videos
    networks:
      - parabank-automation-network
    command: npm run test:ci:ui
    profiles:
      - ui-only

  # Service for smoke testing
  parabank-smoke-tests:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: parabank-smoke-tests
    environment:
      - HEADLESS=true
      - NODE_ENV=production
      - PARABANK_URL=https://parabank.parasoft.com/parabank
      - PARABANK_API_URL=https://parabank.parasoft.com/parabank/services/bank
    volumes:
      - ./reports:/app/reports
    networks:
      - parabank-automation-network
    command: npm run test:smoke
    profiles:
      - smoke

  # Jenkins agent (optional - for Jenkins Docker integration)
  jenkins-agent:
    image: jenkins/inbound-agent:latest
    container_name: jenkins-parabank-agent
    environment:
      - JENKINS_URL=${JENKINS_URL:-http://jenkins:8080}
      - JENKINS_SECRET=${JENKINS_SECRET:-}
      - JENKINS_AGENT_NAME=${JENKINS_AGENT_NAME:-parabank-agent}
      - JENKINS_AGENT_WORKDIR=/home/jenkins/agent
    volumes:
      - jenkins-agent-workdir:/home/jenkins/agent
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/workspace
    networks:
      - parabank-automation-network
    profiles:
      - jenkins-agent
    depends_on:
      - parabank-automation

  # Allure report server (optional)
  allure-server:
    image: frankescobar/allure-docker-service
    container_name: allure-server
    environment:
      CHECK_RESULTS_EVERY_SECONDS: 1
      KEEP_HISTORY: 1
      KEEP_HISTORY_LATEST: 25
    ports:
      - "5050:5050"
    volumes:
      - ./allure-results:/app/allure-results
      - ./allure-reports:/app/default-reports
    networks:
      - parabank-automation-network
    profiles:
      - allure
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5050/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Web server for serving reports
  report-server:
    image: nginx:alpine
    container_name: report-server
    ports:
      - "8080:80"
    volumes:
      - ./reports:/usr/share/nginx/html
      - ./src/features/support/reports:/usr/share/nginx/html/support-reports
      # Only mount nginx.conf if it exists
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - parabank-automation-network
    profiles:
      - reports
    depends_on:
      - parabank-automation
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  parabank-automation-network:
    name: parabank-automation-network

volumes:
  jenkins-agent-workdir:
    name: jenkins-agent-workdir
  allure-reports:
    name: allure-reports
